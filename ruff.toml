target-version = "py311"

lint.select = ["ALL"]

lint.ignore = [
    "ANN001",   # Missing type annotation for function argument
    "ANN201",   # ANN001 Missing type annotation for function argument
    "ANN202",   # Missing return type annotation for private function
    "ANN204",   # Missing return type annotation for special method
    "ANN205",   # Missing return type annotation for staticmethod
    "BLE001",   # Do not catch blind exception: `Exception`
    "C901",     # is too complex
    "COM812",   # Trailing comma missing
    "D203",     # 1 blank line required before class docstring
    "D213",     # Multi-line docstring summary should start at the second line
    "EM101",    # Exception must not use a string literal, assign to variable first
    "EM102",    # Exception must not use an f-string literal, assign to variable first
    "ISC001",   # Single line implicit string concatenation
    "PLR0912",  # Too many branches
    "PLR0915",  # Too many statements
    "PTH122",   # `os.path.splitext()` should be replaced by `Path.suffix`, `Path.stem`, and `Path.parent`
    "PTH123",   # `open()` should be replaced by `Path.open()`
    "SIM103",   # Return the condition directly
    "SIM105",   # Use `contextlib.suppress(asyncio.CancelledError)` instead of `try`-`except`-`pass`
    "TRY003",   # Avoid specifying long messages outside the exception class
    "TRY301",   # Abstract `raise` to an inner function
]


[lint.per-file-ignores]
"examples/*" = [
    "T201",      # `print` found
]
